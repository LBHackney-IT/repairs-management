<div class="filter_by_trade govuk-grid-column-one-quarter">
  <div class="govuk-grid-row govuk-table__header filter_heading">
    <div class="govuk-grid-column-one-half">
      <p class="govuk-body-m govuk-!-font-weight-bold">Apply filters</p>
    </div>
    <div class="govuk-grid-column-one-half">
      <button id="clearFilters" class='clear-all-filters govuk-body-s'>Clear filters</button>
    </div>
  </div>

  <div class="govuk-form-group">
    <fieldset class='govuk-fieldset work-order-filter'>
      <div class="hierarchy-filter-collapsible-header work-order-filter-collapsible-header">
        <h4 class="govuk-heading-s">Property Type</h4>
        <i class="work-order-filter-collapsible hierarchy-filter-collapsible up-arrow"></i>
      </div>

      <div class="hierarchy-hackney-checkbox">
        <% hierarchy.keys.each_with_index do |description, index| %>
          <div class="work-order-filter-options govuk-body-s">
            <input onClick="applyBuildingFilter('<%= description.parameterize %>-tab', '<%= description.parameterize %>-content')" class="hierarchy-filter-checkbox tabelement" id="hierarchy-<%=index%>" type="radio" value="hierarchy-<%=index%>" name="hierarchy" <%= 'checked' if index == 0%>>
            <label class="hackney-checkboxes__label" for="hierarchy-<%=index%>">
              <%= description %>
            </label>
          </div>
        <% end %>
      </div>

    </fieldset>
  </div>

  <div class="govuk-form-group">
    <fieldset class='govuk-fieldset work-order-filter'>
      <div class="trade-filter-collapsible-header work-order-filter-collapsible-header">
        <h4 class="govuk-heading-s">Trade</h4>
        <i class="work-order-filter-collapsible trade-filter-collapsible up-arrow"></i>
      </div>

      <div class="trade-hackney-checkbox">
        <% work_orders_trades.each_with_index do |trade, index| %>
          <div class="work-order-filter-options govuk-body-s">
            <input id="trade-<%=index%>" class='trade-filter-checkbox' type="checkbox" value="trade-<%=index%>">
            <label class="hackney-checkboxes__label" for="trade-<%=index%>">
              <%= trade %>
            </label>
          </div>
        <% end %>
      </div>

    </fieldset>
  </div>
</div>

<script>
  (function () {
    var filterCheckBoxes = [];
    var workOrders = [];

    function handleToggleTrade() {
      filterCheckBoxes = document.querySelectorAll('.trade-filter-checkbox:checked');
      workOrders = document.querySelectorAll('.hackney-work-order-rows.repairs-history');

      var showTheseTrades = [];

      for(var i = 0; i < filterCheckBoxes.length; i++) {
        showTheseTrades.push(filterCheckBoxes[i].id);
      }

      if (showTheseTrades.length == 0) {
        for(var i = 0; i < workOrders.length; i++) {
          workOrders[i].classList.remove('hidden');
        }
      } else {

        for(var i = 0; i < workOrders.length; i++) {
          workOrders[i].classList.add('hidden');
          if (showTheseTrades.indexOf(workOrders[i].getAttribute("data-trade")) >= 0) {
            workOrders[i].classList.remove('hidden');
          }
        }
      }
    }

    function handleClearAllFilters() {
      for(var i = 0; i < filterCheckBoxes.length; i++) {
        filterCheckBoxes[i].checked = false;
      }
      for(var i = 0; i < workOrders.length; i++) {
        workOrders[i].classList.remove('hidden');
      }
    }

    function collapsibleFilter(hierarchyOrTrade) {
      var collapsible = document.querySelector(hierarchyOrTrade + '-filter-collapsible');
      var content = document.querySelector(hierarchyOrTrade + '-hackney-checkbox');

      if (content.style.display === "none") {
        content.style.display = "block";
        collapsible.classList.remove('up-arrow');
        collapsible.classList.add('up-arrow');
      } else {
        content.style.display = "none";
        collapsible.classList.remove('up-arrow');
        collapsible.classList.add('down-arrow');
      }
    }

    var checkboxes = document.querySelectorAll('.trade-filter-checkbox');
    for(var i = 0; i < checkboxes.length; i++) {
      checkboxes[i].addEventListener('click', handleToggleTrade);
    }

    document.getElementById('clearFilters').addEventListener('click', handleClearAllFilters);

    document.querySelector('.trade-filter-collapsible-header').addEventListener('click', function(){collapsibleFilter('.trade')});
    document.querySelector('.hierarchy-filter-collapsible-header').addEventListener('click', function(){collapsibleFilter('.hierarchy')});
  })();

  function applyBuildingFilter(tab_id, content_id) {
      var tabs = document.getElementsByClassName('tabelement');

      var tab_contents = document.getElementsByClassName('tabcontent');
      for(i = 0; i < tabs.length; i++) {
        var el = tab_contents[i];
        el.style.display = 'none';
        el.className = 'tabcontent';
      }
      document.getElementById(content_id).style.display = 'block';
    }

</script>
