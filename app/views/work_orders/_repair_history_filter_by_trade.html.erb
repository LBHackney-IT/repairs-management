<div class="filter_by_trade govuk-grid-column-one-quarter">
  <div class="govuk-grid-row govuk-table__header filter_by_trade_heading">
    <div class="govuk-grid-column-one-half">
      <p class="govuk-body-m govuk-!-font-weight-bold">Apply filters</p>
    </div>
    <div class="govuk-grid-column-one-half">
      <button id="clearFilters" class='clear-all-filters govuk-body-s'>Clear filters</button>
    </div>
  </div>

  <div class="govuk-form-group">
    <fieldset class='govuk-fieldset options-filter'>
      <div class="filter-collapsible-header">
        <h4 class="govuk-heading-s">Trade</h4>
        <i class="filter-collapsible up-arrow"></i>
      </div>

      <div class="hackney-checkboxes">
        <% work_orders_trades.each_with_index do |trade, index| %>
        <div class="filter-options govuk-body-s">
          <input id="trade-<%=index%>" class='trade-filter-checkbox' type="checkbox" value="trade-<%=index%>">
          <label class="hackney-checkboxes__label" for="trade-<%=index%>">
            <%= trade %>
          </label>
        </div>
        <% end %>
      </div>

    </fieldset>
  </div>

  <div class="govuk-form-group">
    <fieldset class='govuk-fieldset options-filter'>
      <div class="filter-collapsible-header">
        <h4 class="govuk-heading-s">Status</h4>
        <i class="filter-collapsible up-arrow"></i>
      </div>

      <div class="hackney-checkboxes">
        <% work_orders_status.each_with_index do |status, index| %>
        <div class="filter-options govuk-body-s">
          <input id="status-<%=index%>" class='status-filter-checkbox' type="checkbox" value="status-<%=index%>">
          <label class="hackney-checkboxes__label" for="status-<%=index%>">
            <%= work_order_status_description(status) %>
          </label>
        </div>
        <% end %>
      </div>

    </fieldset>
  </div>
</div>

<script>
  (function () {

    function showWorkOrders(i) {
      workOrders[i].classList.remove('hidden');
    }

    function hideWorkOrders(i) {
      workOrders[i].classList.add('hidden');
    }

    function noSelectedCheckbox(array) {
      return array.length == 0
    }

    var filterCheckBoxes, workOrders = [];

    function handleToggleFilter() {
      tradeFilterCheckBoxes = document.querySelectorAll('.trade-filter-checkbox:checked');
      statusFilterCheckBoxes = document.querySelectorAll('.status-filter-checkbox:checked');
      workOrders = document.querySelectorAll('.hackney-work-order-rows');

      var showTheseTrades = [];
      var showTheseStatuses = [];

      for(var i = 0; i < tradeFilterCheckBoxes.length; i++) {
        showTheseTrades.push(tradeFilterCheckBoxes[i].id);
      }

      for(var i = 0; i < statusFilterCheckBoxes.length; i++) {
        showTheseStatuses.push(statusFilterCheckBoxes[i].id);
      }

      if ((noSelectedCheckbox(showTheseTrades)) && (noSelectedCheckbox(showTheseStatuses))) {
        for(var i = 0; i < workOrders.length; i++) {
          showWorkOrders(i);
        }
      } else {

        for(var i = 0; i < workOrders.length; i++) {
          hideWorkOrders(i);

          if ((noSelectedCheckbox(showTheseTrades)) || (noSelectedCheckbox(showTheseStatuses))) {
            if (showTheseTrades.indexOf(workOrders[i].getAttribute("data-trade")) >= 0) {
              showWorkOrders(i);
            }
            if (showTheseStatuses.indexOf(workOrders[i].getAttribute("data-status")) >= 0) {
              showWorkOrders(i);
            }
          }

          if ((showTheseStatuses.indexOf(workOrders[i].getAttribute("data-status")) >= 0) && (showTheseTrades.indexOf(workOrders[i].getAttribute("data-trade")) >= 0)) {
              showWorkOrders(i);
          }
        }
      }
    }

    function handleClearAllFilters() {
      for(var i = 0; i < tradeFilterCheckBoxes.length; i++) {
        tradeFilterCheckBoxes[i].checked = false;
      }
      for(var i = 0; i < statusFilterCheckBoxes.length; i++) {
        statusFilterCheckBoxes[i].checked = false;
      }
      for(var i = 0; i < workOrders.length; i++) {
        showWorkOrders(i);
      }
    }

    function collapsibleFilter() {
      var collapsible = document.querySelector(".filter-collapsible");
      var content = document.querySelector('.hackney-checkboxes');

      if (content.style.display === "none") {
        content.style.display = "block";
        collapsible.classList.remove('up-arrow');
        collapsible.classList.add('up-arrow');
      } else {
        content.style.display = "none";
        collapsible.classList.remove('up-arrow');
        collapsible.classList.add('down-arrow');
      }
    }

    function handleSelectCheckbox(checkbox) {
      checkbox[i].addEventListener('click', handleToggleFilter);
    }

    var tradeCheckboxes = document.querySelectorAll('.trade-filter-checkbox');
    var statusCheckboxes = document.querySelectorAll('.status-filter-checkbox');

    for(var i = 0; i < tradeCheckboxes.length; i++) {
      handleSelectCheckbox(tradeCheckboxes)
    }
    for(var i = 0; i < statusCheckboxes.length; i++) {
      handleSelectCheckbox(statusCheckboxes)
    }

    document.getElementById('clearFilters').addEventListener('click', handleClearAllFilters);

    document.querySelector('.filter-collapsible-header').addEventListener('click', collapsibleFilter);

  })();
</script>
